gearpump {

  serializers {
    ## Follow this format when adding new serializer for new message types
    ##    "io.gearpump.Message" = "io.gearpump.streaming.MessageSerializer"
    "io.gearpump.Message" = "io.gearpump.streaming.MessageSerializer"
    "io.gearpump.streaming.task.AckRequest" = "io.gearpump.streaming.AckRequestSerializer"
    "io.gearpump.streaming.task.InitialAckRequest" = "io.gearpump.streaming.InitialAckRequestSerializer"
    "io.gearpump.streaming.task.Ack" = "io.gearpump.streaming.AckSerializer"
    "io.gearpump.streaming.task.TaskId" = "io.gearpump.streaming.TaskIdSerializer"
    "io.gearpump.streaming.task.LatencyProbe" = "io.gearpump.streaming.LatencyProbeSerializer"
  }

  streaming {
    ## We will timeout the task if it cannot register itself to AppMaster in time.
    register-task-timeout-ms = 60000

    ## ack once after sending ack-once-every-message-count messages.
    ack-once-every-message-count = 100

    ## max pending message per task to task connection. If pending message size is
    ## over this, then the flow control will not allow further sending.
    ## This value should be bigger than ack-once-every-message-count
    max-pending-message-count-per-connection = 1000
  }
}