gearpump.task-dispatcher = "akka.actor.pined-dispatcher"
akka {
  extensions = [
    "com.romix.akka.serialization.kryo.KryoSerializationExtension$",
    "org.apache.gearpump.transport.Express$"
  ]
  loglevel = "DEBUG"
  actor {
    provider = "akka.remote.AliasRemoteActorRefProvider"
    default-mailbox {
      mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
    }
    default-dispatcher {
      fork-join-executor {
        parallelism-factor = 2
        parallelism-max = 1
        parallelism-min = 1
      }
    }
    pined-dispatcher {
      executor = "thread-pool-executor"
      type = "PinnedDispatcher"
    }
    serializers {
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }
    serialization-bindings {
      "java.lang.String" = kryo
      "org.apache.gearpump.task.Message" = kryo
      "org.apache.gearpump.task.AckRequest" = kryo
      "org.apache.gearpump.task.Ack" = kryo
    }

    kryo {
      buffer-size = 4096
      classes = [
        "org.apache.gearpump.task.Message",
        "org.apache.gearpump.task.AckRequest",
        "org.apache.gearpump.task.Ack"
      ]
      kryo-custom-serializer-init = "org.apache.gearpump.serializer.GearpumpSerialization"
      compression = off
      idstrategy = "incremental"
      implicit-registration-logging = false
      kryo-reference-map = true
      kryo-trace = false
      mappings {
      }
      max-buffer-size = -1
      serializer-pool-size = 16
      type = "graph"
      use-manifests = false
    }
  }
  remote {
    use-dispatcher = "akka.remote.default-remote-dispatcher"
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      port = 0
    }
    default-remote-dispatcher {
      type = Dispatcher
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 1
        parallelism-max = 1
      }
    }    
    startup-timeout = 600 s
    shutdown-timeout = 600 s
    flush-wait-on-shutdown = 2 s
    command-ack-timeout = 600 s

    transport-failure-detector {
      heartbeat-interval = 600 s
      acceptable-heartbeat-pause = 2000 s
    }
    watch-failure-detector {
      heartbeat-interval = 600 s
      acceptable-heartbeat-pause = 10 s
      unreachable-nodes-reaper-interval = 600s
      expected-response-after = 3 s
    }
    retry-gate-closed-for = 5 s
    prune-quarantine-marker-after = 5 d
    system-message-ack-piggyback-timeout = 600 s
    resend-interval = 600 s
    initial-system-message-delivery-timeout = 3 m
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp.connection-timeout = 600 s
  }
}